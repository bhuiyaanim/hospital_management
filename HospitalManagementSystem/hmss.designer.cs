#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HospitalManagementSystem
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="HMSS")]
	public partial class hmssDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertPatient(Patient instance);
    partial void UpdatePatient(Patient instance);
    partial void DeletePatient(Patient instance);
    partial void InsertRoom(Room instance);
    partial void UpdateRoom(Room instance);
    partial void DeleteRoom(Room instance);
    partial void InsertSalary(Salary instance);
    partial void UpdateSalary(Salary instance);
    partial void DeleteSalary(Salary instance);
    partial void InsertInvoice(Invoice instance);
    partial void UpdateInvoice(Invoice instance);
    partial void DeleteInvoice(Invoice instance);
    partial void InsertEmployee(Employee instance);
    partial void UpdateEmployee(Employee instance);
    partial void DeleteEmployee(Employee instance);
    partial void InsertDoctor(Doctor instance);
    partial void UpdateDoctor(Doctor instance);
    partial void DeleteDoctor(Doctor instance);
    partial void InsertDepartment(Department instance);
    partial void UpdateDepartment(Department instance);
    partial void DeleteDepartment(Department instance);
    partial void InsertAdmin(Admin instance);
    partial void UpdateAdmin(Admin instance);
    partial void DeleteAdmin(Admin instance);
    partial void InsertAccountant(Accountant instance);
    partial void UpdateAccountant(Accountant instance);
    partial void DeleteAccountant(Accountant instance);
    #endregion
		
		public hmssDataContext() : 
				base(global::HospitalManagementSystem.Properties.Settings.Default.HMSSConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public hmssDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public hmssDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public hmssDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public hmssDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Login> Logins
		{
			get
			{
				return this.GetTable<Login>();
			}
		}
		
		public System.Data.Linq.Table<Patient> Patients
		{
			get
			{
				return this.GetTable<Patient>();
			}
		}
		
		public System.Data.Linq.Table<Receptionist> Receptionists
		{
			get
			{
				return this.GetTable<Receptionist>();
			}
		}
		
		public System.Data.Linq.Table<Room> Rooms
		{
			get
			{
				return this.GetTable<Room>();
			}
		}
		
		public System.Data.Linq.Table<Salary> Salaries
		{
			get
			{
				return this.GetTable<Salary>();
			}
		}
		
		public System.Data.Linq.Table<Invoice> Invoices
		{
			get
			{
				return this.GetTable<Invoice>();
			}
		}
		
		public System.Data.Linq.Table<Employee> Employees
		{
			get
			{
				return this.GetTable<Employee>();
			}
		}
		
		public System.Data.Linq.Table<Doctor> Doctors
		{
			get
			{
				return this.GetTable<Doctor>();
			}
		}
		
		public System.Data.Linq.Table<Department> Departments
		{
			get
			{
				return this.GetTable<Department>();
			}
		}
		
		public System.Data.Linq.Table<Admin> Admins
		{
			get
			{
				return this.GetTable<Admin>();
			}
		}
		
		public System.Data.Linq.Table<Accountant> Accountants
		{
			get
			{
				return this.GetTable<Accountant>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Login")]
	public partial class Login
	{
		
		private string _UserID;
		
		private string _UserPassword;
		
		private string _UserName;
		
		private string _UserMail;
		
		private string _UserPhone;
		
		private string _UserProfile;
		
		public Login()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserPassword", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UserPassword
		{
			get
			{
				return this._UserPassword;
			}
			set
			{
				if ((this._UserPassword != value))
				{
					this._UserPassword = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserMail", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UserMail
		{
			get
			{
				return this._UserMail;
			}
			set
			{
				if ((this._UserMail != value))
				{
					this._UserMail = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserPhone", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UserPhone
		{
			get
			{
				return this._UserPhone;
			}
			set
			{
				if ((this._UserPhone != value))
				{
					this._UserPhone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserProfile", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UserProfile
		{
			get
			{
				return this._UserProfile;
			}
			set
			{
				if ((this._UserProfile != value))
				{
					this._UserProfile = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Patient")]
	public partial class Patient : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PatientID;
		
		private string _PatientName;
		
		private string _PatientAge;
		
		private string _PatientGender;
		
		private string _PatientDateOfBirth;
		
		private string _PatientAddress;
		
		private string _PatientPhone;
		
		private string _PatientPhoto;
		
		private string _PatientBloodGrooup;
		
		private string _PatientRoomNo;
		
		private string _PatientDateOfAdmission;
		
		private string _PatientDateOfRelease;
		
		private string _PatientDoctorName;
		
		private string _LoginID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPatientIDChanging(string value);
    partial void OnPatientIDChanged();
    partial void OnPatientNameChanging(string value);
    partial void OnPatientNameChanged();
    partial void OnPatientAgeChanging(string value);
    partial void OnPatientAgeChanged();
    partial void OnPatientGenderChanging(string value);
    partial void OnPatientGenderChanged();
    partial void OnPatientDateOfBirthChanging(string value);
    partial void OnPatientDateOfBirthChanged();
    partial void OnPatientAddressChanging(string value);
    partial void OnPatientAddressChanged();
    partial void OnPatientPhoneChanging(string value);
    partial void OnPatientPhoneChanged();
    partial void OnPatientPhotoChanging(string value);
    partial void OnPatientPhotoChanged();
    partial void OnPatientBloodGrooupChanging(string value);
    partial void OnPatientBloodGrooupChanged();
    partial void OnPatientRoomNoChanging(string value);
    partial void OnPatientRoomNoChanged();
    partial void OnPatientDateOfAdmissionChanging(string value);
    partial void OnPatientDateOfAdmissionChanged();
    partial void OnPatientDateOfReleaseChanging(string value);
    partial void OnPatientDateOfReleaseChanged();
    partial void OnPatientDoctorNameChanging(string value);
    partial void OnPatientDoctorNameChanged();
    partial void OnLoginIDChanging(string value);
    partial void OnLoginIDChanged();
    #endregion
		
		public Patient()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PatientID
		{
			get
			{
				return this._PatientID;
			}
			set
			{
				if ((this._PatientID != value))
				{
					this.OnPatientIDChanging(value);
					this.SendPropertyChanging();
					this._PatientID = value;
					this.SendPropertyChanged("PatientID");
					this.OnPatientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PatientName
		{
			get
			{
				return this._PatientName;
			}
			set
			{
				if ((this._PatientName != value))
				{
					this.OnPatientNameChanging(value);
					this.SendPropertyChanging();
					this._PatientName = value;
					this.SendPropertyChanged("PatientName");
					this.OnPatientNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientAge", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PatientAge
		{
			get
			{
				return this._PatientAge;
			}
			set
			{
				if ((this._PatientAge != value))
				{
					this.OnPatientAgeChanging(value);
					this.SendPropertyChanging();
					this._PatientAge = value;
					this.SendPropertyChanged("PatientAge");
					this.OnPatientAgeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientGender", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PatientGender
		{
			get
			{
				return this._PatientGender;
			}
			set
			{
				if ((this._PatientGender != value))
				{
					this.OnPatientGenderChanging(value);
					this.SendPropertyChanging();
					this._PatientGender = value;
					this.SendPropertyChanged("PatientGender");
					this.OnPatientGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientDateOfBirth", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PatientDateOfBirth
		{
			get
			{
				return this._PatientDateOfBirth;
			}
			set
			{
				if ((this._PatientDateOfBirth != value))
				{
					this.OnPatientDateOfBirthChanging(value);
					this.SendPropertyChanging();
					this._PatientDateOfBirth = value;
					this.SendPropertyChanged("PatientDateOfBirth");
					this.OnPatientDateOfBirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientAddress", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PatientAddress
		{
			get
			{
				return this._PatientAddress;
			}
			set
			{
				if ((this._PatientAddress != value))
				{
					this.OnPatientAddressChanging(value);
					this.SendPropertyChanging();
					this._PatientAddress = value;
					this.SendPropertyChanged("PatientAddress");
					this.OnPatientAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientPhone", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PatientPhone
		{
			get
			{
				return this._PatientPhone;
			}
			set
			{
				if ((this._PatientPhone != value))
				{
					this.OnPatientPhoneChanging(value);
					this.SendPropertyChanging();
					this._PatientPhone = value;
					this.SendPropertyChanged("PatientPhone");
					this.OnPatientPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientPhoto", DbType="VarChar(200)")]
		public string PatientPhoto
		{
			get
			{
				return this._PatientPhoto;
			}
			set
			{
				if ((this._PatientPhoto != value))
				{
					this.OnPatientPhotoChanging(value);
					this.SendPropertyChanging();
					this._PatientPhoto = value;
					this.SendPropertyChanged("PatientPhoto");
					this.OnPatientPhotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientBloodGrooup", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PatientBloodGrooup
		{
			get
			{
				return this._PatientBloodGrooup;
			}
			set
			{
				if ((this._PatientBloodGrooup != value))
				{
					this.OnPatientBloodGrooupChanging(value);
					this.SendPropertyChanging();
					this._PatientBloodGrooup = value;
					this.SendPropertyChanged("PatientBloodGrooup");
					this.OnPatientBloodGrooupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientRoomNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PatientRoomNo
		{
			get
			{
				return this._PatientRoomNo;
			}
			set
			{
				if ((this._PatientRoomNo != value))
				{
					this.OnPatientRoomNoChanging(value);
					this.SendPropertyChanging();
					this._PatientRoomNo = value;
					this.SendPropertyChanged("PatientRoomNo");
					this.OnPatientRoomNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientDateOfAdmission", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PatientDateOfAdmission
		{
			get
			{
				return this._PatientDateOfAdmission;
			}
			set
			{
				if ((this._PatientDateOfAdmission != value))
				{
					this.OnPatientDateOfAdmissionChanging(value);
					this.SendPropertyChanging();
					this._PatientDateOfAdmission = value;
					this.SendPropertyChanged("PatientDateOfAdmission");
					this.OnPatientDateOfAdmissionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientDateOfRelease", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PatientDateOfRelease
		{
			get
			{
				return this._PatientDateOfRelease;
			}
			set
			{
				if ((this._PatientDateOfRelease != value))
				{
					this.OnPatientDateOfReleaseChanging(value);
					this.SendPropertyChanging();
					this._PatientDateOfRelease = value;
					this.SendPropertyChanged("PatientDateOfRelease");
					this.OnPatientDateOfReleaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientDoctorName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PatientDoctorName
		{
			get
			{
				return this._PatientDoctorName;
			}
			set
			{
				if ((this._PatientDoctorName != value))
				{
					this.OnPatientDoctorNameChanging(value);
					this.SendPropertyChanging();
					this._PatientDoctorName = value;
					this.SendPropertyChanged("PatientDoctorName");
					this.OnPatientDoctorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string LoginID
		{
			get
			{
				return this._LoginID;
			}
			set
			{
				if ((this._LoginID != value))
				{
					this.OnLoginIDChanging(value);
					this.SendPropertyChanging();
					this._LoginID = value;
					this.SendPropertyChanged("LoginID");
					this.OnLoginIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Receptionist")]
	public partial class Receptionist
	{
		
		private string _ReceptionistID;
		
		private string _ReceptionistName;
		
		private string _ReceptionistAddress;
		
		private string _ReceptionistPhone;
		
		private string _ReceptionistAge;
		
		private string _ReceptionistGender;
		
		private string _ReceptionistSalary;
		
		private string _ReceptionistPhoto;
		
		private string _ReceptionistEmail;
		
		private string _LoginID;
		
		public Receptionist()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceptionistID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ReceptionistID
		{
			get
			{
				return this._ReceptionistID;
			}
			set
			{
				if ((this._ReceptionistID != value))
				{
					this._ReceptionistID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceptionistName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ReceptionistName
		{
			get
			{
				return this._ReceptionistName;
			}
			set
			{
				if ((this._ReceptionistName != value))
				{
					this._ReceptionistName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceptionistAddress", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ReceptionistAddress
		{
			get
			{
				return this._ReceptionistAddress;
			}
			set
			{
				if ((this._ReceptionistAddress != value))
				{
					this._ReceptionistAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceptionistPhone", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ReceptionistPhone
		{
			get
			{
				return this._ReceptionistPhone;
			}
			set
			{
				if ((this._ReceptionistPhone != value))
				{
					this._ReceptionistPhone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceptionistAge", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ReceptionistAge
		{
			get
			{
				return this._ReceptionistAge;
			}
			set
			{
				if ((this._ReceptionistAge != value))
				{
					this._ReceptionistAge = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceptionistGender", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ReceptionistGender
		{
			get
			{
				return this._ReceptionistGender;
			}
			set
			{
				if ((this._ReceptionistGender != value))
				{
					this._ReceptionistGender = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceptionistSalary", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ReceptionistSalary
		{
			get
			{
				return this._ReceptionistSalary;
			}
			set
			{
				if ((this._ReceptionistSalary != value))
				{
					this._ReceptionistSalary = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceptionistPhoto", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string ReceptionistPhoto
		{
			get
			{
				return this._ReceptionistPhoto;
			}
			set
			{
				if ((this._ReceptionistPhoto != value))
				{
					this._ReceptionistPhoto = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceptionistEmail", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ReceptionistEmail
		{
			get
			{
				return this._ReceptionistEmail;
			}
			set
			{
				if ((this._ReceptionistEmail != value))
				{
					this._ReceptionistEmail = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string LoginID
		{
			get
			{
				return this._LoginID;
			}
			set
			{
				if ((this._LoginID != value))
				{
					this._LoginID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Room")]
	public partial class Room : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _RoomNo;
		
		private string _R_DateOfAdmition;
		
		private string _R_DateOfRelease;
		
		private string _LoginID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoomNoChanging(string value);
    partial void OnRoomNoChanged();
    partial void OnR_DateOfAdmitionChanging(string value);
    partial void OnR_DateOfAdmitionChanged();
    partial void OnR_DateOfReleaseChanging(string value);
    partial void OnR_DateOfReleaseChanged();
    partial void OnLoginIDChanging(string value);
    partial void OnLoginIDChanged();
    #endregion
		
		public Room()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomNo", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string RoomNo
		{
			get
			{
				return this._RoomNo;
			}
			set
			{
				if ((this._RoomNo != value))
				{
					this.OnRoomNoChanging(value);
					this.SendPropertyChanging();
					this._RoomNo = value;
					this.SendPropertyChanged("RoomNo");
					this.OnRoomNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_R_DateOfAdmition", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string R_DateOfAdmition
		{
			get
			{
				return this._R_DateOfAdmition;
			}
			set
			{
				if ((this._R_DateOfAdmition != value))
				{
					this.OnR_DateOfAdmitionChanging(value);
					this.SendPropertyChanging();
					this._R_DateOfAdmition = value;
					this.SendPropertyChanged("R_DateOfAdmition");
					this.OnR_DateOfAdmitionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_R_DateOfRelease", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string R_DateOfRelease
		{
			get
			{
				return this._R_DateOfRelease;
			}
			set
			{
				if ((this._R_DateOfRelease != value))
				{
					this.OnR_DateOfReleaseChanging(value);
					this.SendPropertyChanging();
					this._R_DateOfRelease = value;
					this.SendPropertyChanged("R_DateOfRelease");
					this.OnR_DateOfReleaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string LoginID
		{
			get
			{
				return this._LoginID;
			}
			set
			{
				if ((this._LoginID != value))
				{
					this.OnLoginIDChanging(value);
					this.SendPropertyChanging();
					this._LoginID = value;
					this.SendPropertyChanged("LoginID");
					this.OnLoginIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Salary")]
	public partial class Salary : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Grade;
		
		private string _Salary1;
		
		private string _LoginID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGradeChanging(string value);
    partial void OnGradeChanged();
    partial void OnSalary1Changing(string value);
    partial void OnSalary1Changed();
    partial void OnLoginIDChanging(string value);
    partial void OnLoginIDChanged();
    #endregion
		
		public Salary()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Grade", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Grade
		{
			get
			{
				return this._Grade;
			}
			set
			{
				if ((this._Grade != value))
				{
					this.OnGradeChanging(value);
					this.SendPropertyChanging();
					this._Grade = value;
					this.SendPropertyChanged("Grade");
					this.OnGradeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Salary", Storage="_Salary1", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Salary1
		{
			get
			{
				return this._Salary1;
			}
			set
			{
				if ((this._Salary1 != value))
				{
					this.OnSalary1Changing(value);
					this.SendPropertyChanging();
					this._Salary1 = value;
					this.SendPropertyChanged("Salary1");
					this.OnSalary1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string LoginID
		{
			get
			{
				return this._LoginID;
			}
			set
			{
				if ((this._LoginID != value))
				{
					this.OnLoginIDChanging(value);
					this.SendPropertyChanging();
					this._LoginID = value;
					this.SendPropertyChanged("LoginID");
					this.OnLoginIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Invoice")]
	public partial class Invoice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _InvoiceID;
		
		private string _InvoiceDate;
		
		private string _I_PatientName;
		
		private string _I_DoctorName;
		
		private string _I_RoomNo;
		
		private string _I_DateOfAdmition;
		
		private string _I_DateOfRelease;
		
		private string _I_AdmissionCharge;
		
		private string _I_ServiceCharge;
		
		private string _I_DoctorFees;
		
		private string _I_RoomChargePerDay;
		
		private string _I_RoomForDays;
		
		private string _I_Vat;
		
		private string _I_Discount;
		
		private string _I_TotalBill;
		
		private string _LoginID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInvoiceIDChanging(string value);
    partial void OnInvoiceIDChanged();
    partial void OnInvoiceDateChanging(string value);
    partial void OnInvoiceDateChanged();
    partial void OnI_PatientNameChanging(string value);
    partial void OnI_PatientNameChanged();
    partial void OnI_DoctorNameChanging(string value);
    partial void OnI_DoctorNameChanged();
    partial void OnI_RoomNoChanging(string value);
    partial void OnI_RoomNoChanged();
    partial void OnI_DateOfAdmitionChanging(string value);
    partial void OnI_DateOfAdmitionChanged();
    partial void OnI_DateOfReleaseChanging(string value);
    partial void OnI_DateOfReleaseChanged();
    partial void OnI_AdmissionChargeChanging(string value);
    partial void OnI_AdmissionChargeChanged();
    partial void OnI_ServiceChargeChanging(string value);
    partial void OnI_ServiceChargeChanged();
    partial void OnI_DoctorFeesChanging(string value);
    partial void OnI_DoctorFeesChanged();
    partial void OnI_RoomChargePerDayChanging(string value);
    partial void OnI_RoomChargePerDayChanged();
    partial void OnI_RoomForDaysChanging(string value);
    partial void OnI_RoomForDaysChanged();
    partial void OnI_VatChanging(string value);
    partial void OnI_VatChanged();
    partial void OnI_DiscountChanging(string value);
    partial void OnI_DiscountChanged();
    partial void OnI_TotalBillChanging(string value);
    partial void OnI_TotalBillChanged();
    partial void OnLoginIDChanging(string value);
    partial void OnLoginIDChanged();
    #endregion
		
		public Invoice()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string InvoiceID
		{
			get
			{
				return this._InvoiceID;
			}
			set
			{
				if ((this._InvoiceID != value))
				{
					this.OnInvoiceIDChanging(value);
					this.SendPropertyChanging();
					this._InvoiceID = value;
					this.SendPropertyChanged("InvoiceID");
					this.OnInvoiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceDate", DbType="VarChar(50)")]
		public string InvoiceDate
		{
			get
			{
				return this._InvoiceDate;
			}
			set
			{
				if ((this._InvoiceDate != value))
				{
					this.OnInvoiceDateChanging(value);
					this.SendPropertyChanging();
					this._InvoiceDate = value;
					this.SendPropertyChanged("InvoiceDate");
					this.OnInvoiceDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_I_PatientName", DbType="VarChar(50)")]
		public string I_PatientName
		{
			get
			{
				return this._I_PatientName;
			}
			set
			{
				if ((this._I_PatientName != value))
				{
					this.OnI_PatientNameChanging(value);
					this.SendPropertyChanging();
					this._I_PatientName = value;
					this.SendPropertyChanged("I_PatientName");
					this.OnI_PatientNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_I_DoctorName", DbType="VarChar(50)")]
		public string I_DoctorName
		{
			get
			{
				return this._I_DoctorName;
			}
			set
			{
				if ((this._I_DoctorName != value))
				{
					this.OnI_DoctorNameChanging(value);
					this.SendPropertyChanging();
					this._I_DoctorName = value;
					this.SendPropertyChanged("I_DoctorName");
					this.OnI_DoctorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_I_RoomNo", DbType="VarChar(50)")]
		public string I_RoomNo
		{
			get
			{
				return this._I_RoomNo;
			}
			set
			{
				if ((this._I_RoomNo != value))
				{
					this.OnI_RoomNoChanging(value);
					this.SendPropertyChanging();
					this._I_RoomNo = value;
					this.SendPropertyChanged("I_RoomNo");
					this.OnI_RoomNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_I_DateOfAdmition", DbType="VarChar(50)")]
		public string I_DateOfAdmition
		{
			get
			{
				return this._I_DateOfAdmition;
			}
			set
			{
				if ((this._I_DateOfAdmition != value))
				{
					this.OnI_DateOfAdmitionChanging(value);
					this.SendPropertyChanging();
					this._I_DateOfAdmition = value;
					this.SendPropertyChanged("I_DateOfAdmition");
					this.OnI_DateOfAdmitionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_I_DateOfRelease", DbType="VarChar(50)")]
		public string I_DateOfRelease
		{
			get
			{
				return this._I_DateOfRelease;
			}
			set
			{
				if ((this._I_DateOfRelease != value))
				{
					this.OnI_DateOfReleaseChanging(value);
					this.SendPropertyChanging();
					this._I_DateOfRelease = value;
					this.SendPropertyChanged("I_DateOfRelease");
					this.OnI_DateOfReleaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_I_AdmissionCharge", DbType="VarChar(50)")]
		public string I_AdmissionCharge
		{
			get
			{
				return this._I_AdmissionCharge;
			}
			set
			{
				if ((this._I_AdmissionCharge != value))
				{
					this.OnI_AdmissionChargeChanging(value);
					this.SendPropertyChanging();
					this._I_AdmissionCharge = value;
					this.SendPropertyChanged("I_AdmissionCharge");
					this.OnI_AdmissionChargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_I_ServiceCharge", DbType="VarChar(50)")]
		public string I_ServiceCharge
		{
			get
			{
				return this._I_ServiceCharge;
			}
			set
			{
				if ((this._I_ServiceCharge != value))
				{
					this.OnI_ServiceChargeChanging(value);
					this.SendPropertyChanging();
					this._I_ServiceCharge = value;
					this.SendPropertyChanged("I_ServiceCharge");
					this.OnI_ServiceChargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_I_DoctorFees", DbType="VarChar(50)")]
		public string I_DoctorFees
		{
			get
			{
				return this._I_DoctorFees;
			}
			set
			{
				if ((this._I_DoctorFees != value))
				{
					this.OnI_DoctorFeesChanging(value);
					this.SendPropertyChanging();
					this._I_DoctorFees = value;
					this.SendPropertyChanged("I_DoctorFees");
					this.OnI_DoctorFeesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_I_RoomChargePerDay", DbType="VarChar(50)")]
		public string I_RoomChargePerDay
		{
			get
			{
				return this._I_RoomChargePerDay;
			}
			set
			{
				if ((this._I_RoomChargePerDay != value))
				{
					this.OnI_RoomChargePerDayChanging(value);
					this.SendPropertyChanging();
					this._I_RoomChargePerDay = value;
					this.SendPropertyChanged("I_RoomChargePerDay");
					this.OnI_RoomChargePerDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_I_RoomForDays", DbType="VarChar(50)")]
		public string I_RoomForDays
		{
			get
			{
				return this._I_RoomForDays;
			}
			set
			{
				if ((this._I_RoomForDays != value))
				{
					this.OnI_RoomForDaysChanging(value);
					this.SendPropertyChanging();
					this._I_RoomForDays = value;
					this.SendPropertyChanged("I_RoomForDays");
					this.OnI_RoomForDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_I_Vat", DbType="VarChar(50)")]
		public string I_Vat
		{
			get
			{
				return this._I_Vat;
			}
			set
			{
				if ((this._I_Vat != value))
				{
					this.OnI_VatChanging(value);
					this.SendPropertyChanging();
					this._I_Vat = value;
					this.SendPropertyChanged("I_Vat");
					this.OnI_VatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_I_Discount", DbType="VarChar(50)")]
		public string I_Discount
		{
			get
			{
				return this._I_Discount;
			}
			set
			{
				if ((this._I_Discount != value))
				{
					this.OnI_DiscountChanging(value);
					this.SendPropertyChanging();
					this._I_Discount = value;
					this.SendPropertyChanged("I_Discount");
					this.OnI_DiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_I_TotalBill", DbType="VarChar(50)")]
		public string I_TotalBill
		{
			get
			{
				return this._I_TotalBill;
			}
			set
			{
				if ((this._I_TotalBill != value))
				{
					this.OnI_TotalBillChanging(value);
					this.SendPropertyChanging();
					this._I_TotalBill = value;
					this.SendPropertyChanged("I_TotalBill");
					this.OnI_TotalBillChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginID", DbType="NChar(10)")]
		public string LoginID
		{
			get
			{
				return this._LoginID;
			}
			set
			{
				if ((this._LoginID != value))
				{
					this.OnLoginIDChanging(value);
					this.SendPropertyChanging();
					this._LoginID = value;
					this.SendPropertyChanged("LoginID");
					this.OnLoginIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Employee")]
	public partial class Employee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _EmployeeID;
		
		private string _EmployeeName;
		
		private string _EmployeeAddress;
		
		private string _EmployeePhone;
		
		private string _EmployeeSalary;
		
		private string _EmployeeAge;
		
		private string _EmployeeGender;
		
		private string _EmployeeEmail;
		
		private string _LoginID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployeeIDChanging(string value);
    partial void OnEmployeeIDChanged();
    partial void OnEmployeeNameChanging(string value);
    partial void OnEmployeeNameChanged();
    partial void OnEmployeeAddressChanging(string value);
    partial void OnEmployeeAddressChanged();
    partial void OnEmployeePhoneChanging(string value);
    partial void OnEmployeePhoneChanged();
    partial void OnEmployeeSalaryChanging(string value);
    partial void OnEmployeeSalaryChanged();
    partial void OnEmployeeAgeChanging(string value);
    partial void OnEmployeeAgeChanged();
    partial void OnEmployeeGenderChanging(string value);
    partial void OnEmployeeGenderChanged();
    partial void OnEmployeeEmailChanging(string value);
    partial void OnEmployeeEmailChanged();
    partial void OnLoginIDChanging(string value);
    partial void OnLoginIDChanged();
    #endregion
		
		public Employee()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					this.OnEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeID = value;
					this.SendPropertyChanged("EmployeeID");
					this.OnEmployeeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeName", DbType="VarChar(50)")]
		public string EmployeeName
		{
			get
			{
				return this._EmployeeName;
			}
			set
			{
				if ((this._EmployeeName != value))
				{
					this.OnEmployeeNameChanging(value);
					this.SendPropertyChanging();
					this._EmployeeName = value;
					this.SendPropertyChanged("EmployeeName");
					this.OnEmployeeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeAddress", DbType="VarChar(50)")]
		public string EmployeeAddress
		{
			get
			{
				return this._EmployeeAddress;
			}
			set
			{
				if ((this._EmployeeAddress != value))
				{
					this.OnEmployeeAddressChanging(value);
					this.SendPropertyChanging();
					this._EmployeeAddress = value;
					this.SendPropertyChanged("EmployeeAddress");
					this.OnEmployeeAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeePhone", DbType="VarChar(50)")]
		public string EmployeePhone
		{
			get
			{
				return this._EmployeePhone;
			}
			set
			{
				if ((this._EmployeePhone != value))
				{
					this.OnEmployeePhoneChanging(value);
					this.SendPropertyChanging();
					this._EmployeePhone = value;
					this.SendPropertyChanged("EmployeePhone");
					this.OnEmployeePhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeSalary", DbType="VarChar(50)")]
		public string EmployeeSalary
		{
			get
			{
				return this._EmployeeSalary;
			}
			set
			{
				if ((this._EmployeeSalary != value))
				{
					this.OnEmployeeSalaryChanging(value);
					this.SendPropertyChanging();
					this._EmployeeSalary = value;
					this.SendPropertyChanged("EmployeeSalary");
					this.OnEmployeeSalaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeAge", DbType="VarChar(200)")]
		public string EmployeeAge
		{
			get
			{
				return this._EmployeeAge;
			}
			set
			{
				if ((this._EmployeeAge != value))
				{
					this.OnEmployeeAgeChanging(value);
					this.SendPropertyChanging();
					this._EmployeeAge = value;
					this.SendPropertyChanged("EmployeeAge");
					this.OnEmployeeAgeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeGender", DbType="VarChar(50)")]
		public string EmployeeGender
		{
			get
			{
				return this._EmployeeGender;
			}
			set
			{
				if ((this._EmployeeGender != value))
				{
					this.OnEmployeeGenderChanging(value);
					this.SendPropertyChanging();
					this._EmployeeGender = value;
					this.SendPropertyChanged("EmployeeGender");
					this.OnEmployeeGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeEmail", DbType="VarChar(50)")]
		public string EmployeeEmail
		{
			get
			{
				return this._EmployeeEmail;
			}
			set
			{
				if ((this._EmployeeEmail != value))
				{
					this.OnEmployeeEmailChanging(value);
					this.SendPropertyChanging();
					this._EmployeeEmail = value;
					this.SendPropertyChanged("EmployeeEmail");
					this.OnEmployeeEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginID", DbType="VarChar(50)")]
		public string LoginID
		{
			get
			{
				return this._LoginID;
			}
			set
			{
				if ((this._LoginID != value))
				{
					this.OnLoginIDChanging(value);
					this.SendPropertyChanging();
					this._LoginID = value;
					this.SendPropertyChanged("LoginID");
					this.OnLoginIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Doctor")]
	public partial class Doctor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _DoctorID;
		
		private string _DoctorName;
		
		private string _DoctorEmail;
		
		private string _DoctorAddress;
		
		private string _DoctorPhone;
		
		private string _DoctorDepartmentName;
		
		private string _DoctorGender;
		
		private string _DoctorAge;
		
		private string _DoctorSalary;
		
		private string _DoctorPhoto;
		
		private string _LoginID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDoctorIDChanging(string value);
    partial void OnDoctorIDChanged();
    partial void OnDoctorNameChanging(string value);
    partial void OnDoctorNameChanged();
    partial void OnDoctorEmailChanging(string value);
    partial void OnDoctorEmailChanged();
    partial void OnDoctorAddressChanging(string value);
    partial void OnDoctorAddressChanged();
    partial void OnDoctorPhoneChanging(string value);
    partial void OnDoctorPhoneChanged();
    partial void OnDoctorDepartmentNameChanging(string value);
    partial void OnDoctorDepartmentNameChanged();
    partial void OnDoctorGenderChanging(string value);
    partial void OnDoctorGenderChanged();
    partial void OnDoctorAgeChanging(string value);
    partial void OnDoctorAgeChanged();
    partial void OnDoctorSalaryChanging(string value);
    partial void OnDoctorSalaryChanged();
    partial void OnDoctorPhotoChanging(string value);
    partial void OnDoctorPhotoChanged();
    partial void OnLoginIDChanging(string value);
    partial void OnLoginIDChanged();
    #endregion
		
		public Doctor()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoctorID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string DoctorID
		{
			get
			{
				return this._DoctorID;
			}
			set
			{
				if ((this._DoctorID != value))
				{
					this.OnDoctorIDChanging(value);
					this.SendPropertyChanging();
					this._DoctorID = value;
					this.SendPropertyChanged("DoctorID");
					this.OnDoctorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoctorName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DoctorName
		{
			get
			{
				return this._DoctorName;
			}
			set
			{
				if ((this._DoctorName != value))
				{
					this.OnDoctorNameChanging(value);
					this.SendPropertyChanging();
					this._DoctorName = value;
					this.SendPropertyChanged("DoctorName");
					this.OnDoctorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoctorEmail", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DoctorEmail
		{
			get
			{
				return this._DoctorEmail;
			}
			set
			{
				if ((this._DoctorEmail != value))
				{
					this.OnDoctorEmailChanging(value);
					this.SendPropertyChanging();
					this._DoctorEmail = value;
					this.SendPropertyChanged("DoctorEmail");
					this.OnDoctorEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoctorAddress", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DoctorAddress
		{
			get
			{
				return this._DoctorAddress;
			}
			set
			{
				if ((this._DoctorAddress != value))
				{
					this.OnDoctorAddressChanging(value);
					this.SendPropertyChanging();
					this._DoctorAddress = value;
					this.SendPropertyChanged("DoctorAddress");
					this.OnDoctorAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoctorPhone", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DoctorPhone
		{
			get
			{
				return this._DoctorPhone;
			}
			set
			{
				if ((this._DoctorPhone != value))
				{
					this.OnDoctorPhoneChanging(value);
					this.SendPropertyChanging();
					this._DoctorPhone = value;
					this.SendPropertyChanged("DoctorPhone");
					this.OnDoctorPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoctorDepartmentName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DoctorDepartmentName
		{
			get
			{
				return this._DoctorDepartmentName;
			}
			set
			{
				if ((this._DoctorDepartmentName != value))
				{
					this.OnDoctorDepartmentNameChanging(value);
					this.SendPropertyChanging();
					this._DoctorDepartmentName = value;
					this.SendPropertyChanged("DoctorDepartmentName");
					this.OnDoctorDepartmentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoctorGender", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DoctorGender
		{
			get
			{
				return this._DoctorGender;
			}
			set
			{
				if ((this._DoctorGender != value))
				{
					this.OnDoctorGenderChanging(value);
					this.SendPropertyChanging();
					this._DoctorGender = value;
					this.SendPropertyChanged("DoctorGender");
					this.OnDoctorGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoctorAge", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DoctorAge
		{
			get
			{
				return this._DoctorAge;
			}
			set
			{
				if ((this._DoctorAge != value))
				{
					this.OnDoctorAgeChanging(value);
					this.SendPropertyChanging();
					this._DoctorAge = value;
					this.SendPropertyChanged("DoctorAge");
					this.OnDoctorAgeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoctorSalary", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DoctorSalary
		{
			get
			{
				return this._DoctorSalary;
			}
			set
			{
				if ((this._DoctorSalary != value))
				{
					this.OnDoctorSalaryChanging(value);
					this.SendPropertyChanging();
					this._DoctorSalary = value;
					this.SendPropertyChanged("DoctorSalary");
					this.OnDoctorSalaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoctorPhoto", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string DoctorPhoto
		{
			get
			{
				return this._DoctorPhoto;
			}
			set
			{
				if ((this._DoctorPhoto != value))
				{
					this.OnDoctorPhotoChanging(value);
					this.SendPropertyChanging();
					this._DoctorPhoto = value;
					this.SendPropertyChanged("DoctorPhoto");
					this.OnDoctorPhotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string LoginID
		{
			get
			{
				return this._LoginID;
			}
			set
			{
				if ((this._LoginID != value))
				{
					this.OnLoginIDChanging(value);
					this.SendPropertyChanging();
					this._LoginID = value;
					this.SendPropertyChanged("LoginID");
					this.OnLoginIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Department")]
	public partial class Department : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _DepartmentName;
		
		private string _DepartmentDescription;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDepartmentNameChanging(string value);
    partial void OnDepartmentNameChanged();
    partial void OnDepartmentDescriptionChanging(string value);
    partial void OnDepartmentDescriptionChanged();
    #endregion
		
		public Department()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentName", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string DepartmentName
		{
			get
			{
				return this._DepartmentName;
			}
			set
			{
				if ((this._DepartmentName != value))
				{
					this.OnDepartmentNameChanging(value);
					this.SendPropertyChanging();
					this._DepartmentName = value;
					this.SendPropertyChanged("DepartmentName");
					this.OnDepartmentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentDescription", DbType="VarChar(5000) NOT NULL", CanBeNull=false)]
		public string DepartmentDescription
		{
			get
			{
				return this._DepartmentDescription;
			}
			set
			{
				if ((this._DepartmentDescription != value))
				{
					this.OnDepartmentDescriptionChanging(value);
					this.SendPropertyChanging();
					this._DepartmentDescription = value;
					this.SendPropertyChanged("DepartmentDescription");
					this.OnDepartmentDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Admin")]
	public partial class Admin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _AdminID;
		
		private string _AdminName;
		
		private string _AdminAddress;
		
		private string _AdminPhone;
		
		private string _AdminPhoto;
		
		private string _LoginID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnAdminNameChanging(string value);
    partial void OnAdminNameChanged();
    partial void OnAdminAddressChanging(string value);
    partial void OnAdminAddressChanged();
    partial void OnAdminPhoneChanging(string value);
    partial void OnAdminPhoneChanged();
    partial void OnAdminPhotoChanging(string value);
    partial void OnAdminPhotoChanged();
    partial void OnLoginIDChanging(string value);
    partial void OnLoginIDChanged();
    #endregion
		
		public Admin()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminName
		{
			get
			{
				return this._AdminName;
			}
			set
			{
				if ((this._AdminName != value))
				{
					this.OnAdminNameChanging(value);
					this.SendPropertyChanging();
					this._AdminName = value;
					this.SendPropertyChanged("AdminName");
					this.OnAdminNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminAddress", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminAddress
		{
			get
			{
				return this._AdminAddress;
			}
			set
			{
				if ((this._AdminAddress != value))
				{
					this.OnAdminAddressChanging(value);
					this.SendPropertyChanging();
					this._AdminAddress = value;
					this.SendPropertyChanged("AdminAddress");
					this.OnAdminAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminPhone", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminPhone
		{
			get
			{
				return this._AdminPhone;
			}
			set
			{
				if ((this._AdminPhone != value))
				{
					this.OnAdminPhoneChanging(value);
					this.SendPropertyChanging();
					this._AdminPhone = value;
					this.SendPropertyChanged("AdminPhone");
					this.OnAdminPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminPhoto", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminPhoto
		{
			get
			{
				return this._AdminPhoto;
			}
			set
			{
				if ((this._AdminPhoto != value))
				{
					this.OnAdminPhotoChanging(value);
					this.SendPropertyChanging();
					this._AdminPhoto = value;
					this.SendPropertyChanged("AdminPhoto");
					this.OnAdminPhotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string LoginID
		{
			get
			{
				return this._LoginID;
			}
			set
			{
				if ((this._LoginID != value))
				{
					this.OnLoginIDChanging(value);
					this.SendPropertyChanging();
					this._LoginID = value;
					this.SendPropertyChanged("LoginID");
					this.OnLoginIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Accountant")]
	public partial class Accountant : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _AccountantID;
		
		private string _AccountantName;
		
		private string _AccountantAddress;
		
		private string _AccountantPhone;
		
		private string _AccountantSalary;
		
		private string _AccountantAge;
		
		private string _AccountantGender;
		
		private string _AccountantPhoto;
		
		private string _AccountantEmail;
		
		private string _LoginID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccountantIDChanging(string value);
    partial void OnAccountantIDChanged();
    partial void OnAccountantNameChanging(string value);
    partial void OnAccountantNameChanged();
    partial void OnAccountantAddressChanging(string value);
    partial void OnAccountantAddressChanged();
    partial void OnAccountantPhoneChanging(string value);
    partial void OnAccountantPhoneChanged();
    partial void OnAccountantSalaryChanging(string value);
    partial void OnAccountantSalaryChanged();
    partial void OnAccountantAgeChanging(string value);
    partial void OnAccountantAgeChanged();
    partial void OnAccountantGenderChanging(string value);
    partial void OnAccountantGenderChanged();
    partial void OnAccountantPhotoChanging(string value);
    partial void OnAccountantPhotoChanged();
    partial void OnAccountantEmailChanging(string value);
    partial void OnAccountantEmailChanged();
    partial void OnLoginIDChanging(string value);
    partial void OnLoginIDChanged();
    #endregion
		
		public Accountant()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountantID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AccountantID
		{
			get
			{
				return this._AccountantID;
			}
			set
			{
				if ((this._AccountantID != value))
				{
					this.OnAccountantIDChanging(value);
					this.SendPropertyChanging();
					this._AccountantID = value;
					this.SendPropertyChanged("AccountantID");
					this.OnAccountantIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountantName", DbType="VarChar(50)")]
		public string AccountantName
		{
			get
			{
				return this._AccountantName;
			}
			set
			{
				if ((this._AccountantName != value))
				{
					this.OnAccountantNameChanging(value);
					this.SendPropertyChanging();
					this._AccountantName = value;
					this.SendPropertyChanged("AccountantName");
					this.OnAccountantNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountantAddress", DbType="VarChar(50)")]
		public string AccountantAddress
		{
			get
			{
				return this._AccountantAddress;
			}
			set
			{
				if ((this._AccountantAddress != value))
				{
					this.OnAccountantAddressChanging(value);
					this.SendPropertyChanging();
					this._AccountantAddress = value;
					this.SendPropertyChanged("AccountantAddress");
					this.OnAccountantAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountantPhone", DbType="VarChar(50)")]
		public string AccountantPhone
		{
			get
			{
				return this._AccountantPhone;
			}
			set
			{
				if ((this._AccountantPhone != value))
				{
					this.OnAccountantPhoneChanging(value);
					this.SendPropertyChanging();
					this._AccountantPhone = value;
					this.SendPropertyChanged("AccountantPhone");
					this.OnAccountantPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountantSalary", DbType="VarChar(50)")]
		public string AccountantSalary
		{
			get
			{
				return this._AccountantSalary;
			}
			set
			{
				if ((this._AccountantSalary != value))
				{
					this.OnAccountantSalaryChanging(value);
					this.SendPropertyChanging();
					this._AccountantSalary = value;
					this.SendPropertyChanged("AccountantSalary");
					this.OnAccountantSalaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountantAge", DbType="VarChar(50)")]
		public string AccountantAge
		{
			get
			{
				return this._AccountantAge;
			}
			set
			{
				if ((this._AccountantAge != value))
				{
					this.OnAccountantAgeChanging(value);
					this.SendPropertyChanging();
					this._AccountantAge = value;
					this.SendPropertyChanged("AccountantAge");
					this.OnAccountantAgeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountantGender", DbType="VarChar(50)")]
		public string AccountantGender
		{
			get
			{
				return this._AccountantGender;
			}
			set
			{
				if ((this._AccountantGender != value))
				{
					this.OnAccountantGenderChanging(value);
					this.SendPropertyChanging();
					this._AccountantGender = value;
					this.SendPropertyChanged("AccountantGender");
					this.OnAccountantGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountantPhoto", DbType="VarChar(50)")]
		public string AccountantPhoto
		{
			get
			{
				return this._AccountantPhoto;
			}
			set
			{
				if ((this._AccountantPhoto != value))
				{
					this.OnAccountantPhotoChanging(value);
					this.SendPropertyChanging();
					this._AccountantPhoto = value;
					this.SendPropertyChanged("AccountantPhoto");
					this.OnAccountantPhotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountantEmail", DbType="VarChar(50)")]
		public string AccountantEmail
		{
			get
			{
				return this._AccountantEmail;
			}
			set
			{
				if ((this._AccountantEmail != value))
				{
					this.OnAccountantEmailChanging(value);
					this.SendPropertyChanging();
					this._AccountantEmail = value;
					this.SendPropertyChanged("AccountantEmail");
					this.OnAccountantEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginID", DbType="VarChar(50)")]
		public string LoginID
		{
			get
			{
				return this._LoginID;
			}
			set
			{
				if ((this._LoginID != value))
				{
					this.OnLoginIDChanging(value);
					this.SendPropertyChanging();
					this._LoginID = value;
					this.SendPropertyChanged("LoginID");
					this.OnLoginIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
